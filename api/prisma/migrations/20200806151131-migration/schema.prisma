datasource DS {
  provider = "sqlite"
  url = "***"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood db save` to create
// migrations for them.
// TODO: Please remove the following example:
model User {
  id               Int             @id @default(autoincrement())
  email            String          @unique
  password         String
  name             String?
  KPIValues        KPIValues[]
  KPI              KPI[]
  Department       Department?     @relation(fields: [departmentId], references: [id])
  departmentId     Int?
  WorkflowStatus   WorkflowStatus? @relation(fields: [workflowStatusId], references: [id])
  workflowStatusId Int?
}

model KPIValues {
  id           Int      @id @default(autoincrement())
  title        String   @unique
  description  String
  creationDate DateTime @default(now())
  modfiedDate  DateTime @default(now())
  modifiedBy   User     @relation(fields: [userId], references: [id])
  KPI          KPI?     @relation(fields: [kPIId], references: [id])
  kPIId        Int?
  userId       Int
}

model Department {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String
  Section     Section? @relation(fields: [sectionId], references: [id])
  sectionId   Int?
  KPI         KPI[]
  Employees   User[]
}

model Section {
  id          Int          @id @default(autoincrement())
  title       String       @unique
  description String
  departments Department[]
}

model KPI {
  id             Int         @id @default(autoincrement())
  title          String      @unique
  description    String
  formula        String
  type           String
  date           DateTime
  values         KPIValues[]
  creationDate   DateTime    @default(now())
  modfiedDate    DateTime    @default(now())
  modifiedBy     User        @relation(fields: [userId], references: [id])
  approvalStatus String
  actualValue    Int
  currentValue   Int
  userId         Int
  owner          Department  @relation(fields: [departmentId], references: [id])
  departmentId   Int
}

model KPIAttributes {
  id          Int    @id @default(autoincrement())
  title       String @unique
  description String
  type        String
}

model WorkflowStatus {
  id           Int       @id @default(autoincrement())
  title        String    @unique
  description  String
  Workflow     Workflow? @relation(fields: [workflowId], references: [id])
  workflowId   Int?
  participants User[]

}

model Workflow {
  id          Int              @id @default(autoincrement())
  title       String           @unique
  description String
  Statuses    WorkflowStatus[]

}
